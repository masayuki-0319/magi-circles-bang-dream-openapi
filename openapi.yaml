openapi: "3.0.3"

info:
  title: BanGDream Database API ( Unofficial )
  version: 1.0.0
  description: |
    # Description
    - BanG Dream Databse API Schema by OpenAPI ( Unofficial ).
    - [BanG-Dream!-Girls-Band-API | MagiCircles/BanGDream GitHub Wiki](https://github.com/MagiCircles/BanGDream/wiki/BanG-Dream!-Girls-Band-API)
  termsOfService: https://bandori.party/about/
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:{port}
    description: Local
    variables:
      port:
        enum: ["3000", "8080"]
        default: "3000"
  - url: https://bandori.party/api
    description: Production

tags:
- name: members
  description: Band Members

paths:
  "/":
    get:
      summary: All Endpoints
      description: All Endpoints
      deprecated: false
      responses:
        200:
          description: Success
          headers:
            cache-control:
              $ref: '#/components/headers/cache-control'
            content-language:
              $ref: '#/components/headers/content-language'
            content-type:
              $ref: '#/components/headers/content-type'
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    type: string
                    format: uri
                    example: https://bandori.party/api/memberids/
                  memberids:
                    type: string
                    format: uri
                    example: https://bandori.party/api/memberids/
                  cards:
                    type: string
                    format: uri
                    example: https://bandori.party/api/cardids/
                  cardids:
                    type: string
                    format: uri
                    example: https://bandori.party/api/cardids/
                  events:
                    type: string
                    format: uri
                    example: https://bandori.party/api/events/
                  costumes:
                    type: string
                    format: uri
                    example: https://bandori.party/api/costumes/
                  areaitems:
                    type: string
                    format: uri
                    example: https://bandori.party/api/areaitems/
                  assets:
                    type: string
                    format: uri
                    example: https://bandori.party/api/assets/
                  items:
                    type: string
                    format: uri
                    example: https://bandori.party/api/items
  "/memberids/":
    get:
      summary: Get All member id
      description: Get All member id
      deprecated: false
      tags: ["members"]
      requestBody:
        content:
          application/json: {}
      responses:
        200:
          description: Success
          headers:
            cache-control:
              $ref: '#/components/headers/cache-control'
            content-language:
              $ref: '#/components/headers/content-language'
            content-type:
              $ref: '#/components/headers/content-type'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                example: [6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]
  "/members/{memberId}/":
    get:
      summary: Get specified member
      description: Get specified member
      deprecated: false
      tags: ["members"]
      parameters:
        - name: memberId
          in: path
          description: Member ID
          required: true
          schema: { type: string }
          example: 6
      requestBody:
        content:
          application/json: {}
      responses:
        200:
          description: Success
          headers:
            cache-control:
              $ref: '#/components/headers/cache-control'
            content-language:
              $ref: '#/components/headers/content-language'
            content-type:
              $ref: '#/components/headers/content-type'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 6
                  name:
                    type: string
                    example: Kasumi Toyama
                  japanese_name:
                    type: string
                    example: 戸山 香澄
                  image:
                    type: string
                    format: uri
                    example: https://i.bandori.party/u/i/6Kasumi-Toyama-Nhs7xX.png
                  square_image:
                    type: string
                    format: uri
                    example: https://i.bandori.party/u/i/m/6Kasumi-Toyama-jsVzTv.png
                  i_band:
                    type: string
                    enum: ["Poppin'Party", "Afterglow", "Hello, Happy World!", "Pastel*Palettes", "Roselia", "Morfonica", "RAISE A SUILEN"]
                    example: Poppin'Party
                  school:
                    type: string
                    example: Hanasakigawa Girls' Academy
                  i_school_year:
                    type: string
                    example: First
                  romaji_CV:
                    type: string
                    example: Aimi
                  CV:
                    type: string
                    example: 愛美
                  birthday:
                    type: string
                    format: \d{4}-\d{2}-\d{2}
                    example: "2015-07-14"
                  food_like:
                    type: string
                    example: French fries, white rice
                    nullable: true
                  food_dislike:
                    type: string
                    example: Natto (fermented soybeans)
                    nullable: true
                  i_astrological_sign:
                    type: string
                    example: Cancer
                    nullable: true
                  instrument:
                    type: string
                    example: Guitar & Vocals
                    nullable: true
                  description:
                    type: string
                    example: She is highly active and always positive girl. Since she entered high school, she's been searching for something sparkling that could make her heart flutter. Along the way, she encountered a girl with a bright red star-shaped guitar, and since then, it's become her dream to form a girl band. She has a younger sister in her family of 4, but it's not exactly clear who acts like the elder
                    nullable: true

components:
  headers:
    cache-control:
      schema:
        type: string
        example: private
    content-language:
      schema:
        type: string
        example: ja
    content-type:
      schema:
        type: string
        example: application/json; charset=utf-8
